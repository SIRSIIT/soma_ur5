function Data = enhance_dataset(Data,N,k,obj)


M = size(Data,2);  

            switch obj
                case 'cyl'
                    for i=size(Data,2)+1:N % Cylinder
%                          s1=sign(rand(1)-0.5);
%                          s2=sign(rand(1)-0.5);
                         r = 1.8 + (6-1.8).*rand(1);
%                          h = 0*3*rand(1);
                         h = 13 + (30-13).*rand(1);
                Data(:,i) = [Data(1,i-M)*r/Data(end-k+1,i-M);...
                             Data(2,i-M)*r/Data(end-k+1,i-M);...
                             Data(3,i-M)*h/Data(end-k+2,i-M);...
                             Data(4:end-k,i-M);...
                             r;...
                             h];
                end
                    
                case 'cub'
                    for i=size(Data,2)+1:N % CUBE
                        x = 3 + (13.5-3).*rand(1);
                        y = 13.5 + (18.5-13.5).*rand(1);
                        z = 3 + (18.5-3).*rand(1);
%                     x = 2*rand(1)*Data(end-k,i-M);
%                     y = 2*Data(end-k+1,i-M)*x/Data(end-k,i-M);
%                     z = 2*rand(1)*Data(end-k+2,i-M);
                    Data(:,i) = [Data(1,i-M)*x/Data(end-k,i-M);...
                                 Data(2,i-M)*y/Data(end-k+1,i-M);...
                                 Data(3,i-M)*z/Data(end-k+2,i-M);...
                                 Data(4:end-k-1,i-M);...
                                 round(x);...
                                 round(y);...
                                 round(z)];
                    end 
                case 'hol'
                     for i=size(Data,2)+1:N 
                         r = 4 + (8-4)*rand(1);
%                          h = 0*3*rand(1);
                         h = 4 + (13-4)*rand(1);
                Data(:,i) = [Data(1,i-M)*r/Data(end-k+1,i-M);...
                             Data(2,i-M)*r/Data(end-k+1,i-M);...
                             Data(3,i-M)*h/Data(end-k+2,i-M);...
                             Data(4:end-k,i-M);...
                             r;...
                             h];
                     end
                case 'sph'
                     for i=size(Data,2)+1:N 
                         r = 2 + (4-2).*rand(1);
                         
                Data(:,i) = [Data(1,i-M)*r/Data(end,i-M);...
                             Data(2,i-M)*r/Data(end,i-M);...
                             Data(3,i-M)*r/Data(end,i-M);...
                             Data(4:end-1,i-M);...
                             round(r)];
             end    
            end
